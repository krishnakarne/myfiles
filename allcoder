toggleRow(element: any, index: number) {
  const name = element.name;

  const headers = new HttpHeaders({
    'X-API-Key': `${environment.ACCESS_TOKEN}`
  });

  const httpOptions = {
    headers: headers
  };

  // Fetch team repositories and set the data
  this.service.getTeamRepositories(this.http, name).subscribe((res: any) => {
    this.spinner.show();
    this.teamData = res;
    this.repoTeamDetails = new MatTableDataSource(this.teamData);
    this.cd.detectChanges();

    const teamsPaginator = this.paginatorteams.toArray()[index];
    this.repoTeamDetails.paginator = teamsPaginator;
    this.repoTeamDetails.sort = this.innerSort;
    this.spinner.hide();
  });

  // Fetch members URL from service and then make the HTTP request
  this.service.getMembersUrl(this.http, name).pipe(
    mergeMap((membersUrl: string) => {
      console.log('Members URL:', membersUrl); // Debugging URL
      return this.http.get(membersUrl, httpOptions);
    })
  ).subscribe((response: any) => {
    this.spinner.show();
    console.log('Members details response:', response);
    this.branchDetails = new MatTableDataSource(response);
    this.cd.detectChanges();

    const branchPaginator = this.paginatorbranch.toArray()[index];
    this.branchDetails.paginator = branchPaginator;
    this.branchDetails.sort = this.innerSort;
    this.spinner.hide();
  }, error => {
    console.error('Error fetching repository member details:', error);
    this.spinner.hide();
  });

  // Existing logic to handle expanded rows, etc.
}
