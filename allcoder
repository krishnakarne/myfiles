saveDiagram(xml: string): Promise<void> {
    return new Promise((resolve, reject) => {
        try {
            // Parse the XML and try to find the diagram name
            const parser = new DOMParser();
            const xmlDoc = parser.parseFromString(xml, 'application/xml');

            // Attempt to find the name attribute in any element that might represent the diagram
            let diagramName = 'diagram'; // Default name
            const diagramElements = xmlDoc.getElementsByTagName('*'); // Get all elements

            for (let i = 0; i < diagramElements.length; i++) {
                const element = diagramElements[i];
                if (element.hasAttribute('name')) {
                    diagramName = element.getAttribute('name')!;
                    break;
                }
            }

            // Create a canvas to render the diagram content
            const canvas = document.createElement('canvas');
            const ctx = canvas.getContext('2d');
            
            // Set the canvas dimensions based on XML content or a fixed size
            canvas.width = 1000; // You may calculate this based on XML content
            canvas.height = 1000; // You may calculate this based on XML content

            // Example rendering - this should be replaced by actual XML content rendering logic
            // For instance, drawing shapes, text, or images based on XML data
            ctx.fillStyle = 'white';
            ctx.fillRect(0, 0, canvas.width, canvas.height);

            // Example: Drawing a simple shape
            ctx.fillStyle = 'blue';
            ctx.fillRect(50, 50, 100, 100);

            // Convert the canvas to a PNG data URL
            const pngDataUrl = canvas.toDataURL('image/png');

            // Create a download link for the PNG
            const a = document.createElement('a');
            a.href = pngDataUrl;
            a.download = `${diagramName}.png`; // Use the extracted diagram name
            a.click();

            resolve();
        } catch (error) {
            console.error('Save failed', error);
            reject(error);
        }
    });
}
